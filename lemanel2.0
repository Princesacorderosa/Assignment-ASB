#!/bin/bash

#---------------------------------------
#Usage: ~/file.sh "database" "query"

#eg:  ~/Manel.sh Psammodromus algirus 

#if needed: permitions ->   chmod +x file.sh  ---or----  chmod 777 file.sh

#----------------------------------------

#what is database =  $1 (database that we are accessing (nucleotides, proteins...))

#what is query = $2 (the protein number)

#---------------------------------------

#function for search:
#https://www.ncbi.nlm.nih.gov/books/NBK25498/#chapter3.ESearch__ESummaryEFetch
#esearch.fcgi?db=pubmed&term=asthma&query_key=1&WebEnv=<webenv string>&usehistory=y

#this function performs a search in the NCBI database, using the chosen paramethers ($1 and $2) and saving in a xml file, obtaining also the query key and the webenv

Esearch(){
	web=$(wget https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi/\?db\="$1"\&term\="$2"\&usehistory\=y -O ./oioi.xml)
	#To obtain a query key:
	query_key=$(grep -o "<QueryKey>.*</QueryKey>" oioi.xml| sed 's/<QueryKey>//' | sed 's/<\/QueryKey>//' )
	#To obtain the webenv:
	WebEnv=$(grep -o "<WebEnv>.*</WebEnv>" oioi.xml| sed 's/<WebEnv>//' | sed 's/<\/WebEnv>//')
return $query_key
}

Esearch $1 "$2"

#------------------------------------------

#function for fetch
#https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter4.EFetch
#efetch.fcgi?db=protein&query_key=<key>&WebEnv=<webenv string>

#this function will use the query key and the webenv colected in the previous function, to colect the sequence, and store it in a .fas file

Efetch(){
	Web2=$(wget https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi/\?db\="$1"\&query_key\="$query_key"\&WebEnv\="$WebEnv"\&rettype\=fasta -O ./sequence.fas)
echo $Web2
}

Efetch $1

#----------------------------------------

#To remove the xml file created in the Esearch function, no longer needed
rm ./oioi.xml

#Use mafft to align the sequences colected in the Efetch function, and create a new file, containing only the aligned sequences
mafft sequence.fas > sequence_aln.fas

#To remove the file with the unaligned sequences
rm sequence.fas

#----------------------------------------

#the remove function will filter the aligned file, so that it has only the specific information needed, for each gene
Remove(){ 
	sed -i 's/>.*\.1 />/' sequence_aln.fas
	sed -i 's/\<voucher\>//g' sequence_aln.fas 
	sed -i 's/ribosomal.*//' sequence_aln.fas
	sed -i 's/internal.*//' sequence_aln.fas
	sed -i 's/\<isolate\>//g' sequence_aln.fas
	sed -i 's/\<bio-material\>//g' sequence_aln.fas
	sed -i 's/clone.*//' sequence_aln.fas
	sed -i 's/ITS1.*specimen//' sequence_aln.fas
	sed -i 's/\<cultivar\>//g' sequence_aln.fas 
	sed -i 's/Seberg.*//' sequence_aln.fas 
	sed -i 's/\<Candargy\>//g' sequence_aln.fas
	sed -i 's/maturase.*//' sequence_aln.fas
	sed -i 's/trnH-psbA.*//' sequence_aln.fas
	sed -i 's/psbA.*//' sequence_aln.fas
	sed -i 's/PsbA.*//' sequence_aln.fas
	sed -i 's/tRNA-His.*//' sequence_aln.fas
	sed -i 's/photosystem.*//' sequence_aln.fas
	}





